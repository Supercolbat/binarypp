[RESERVED, FOR1, FOR2, FOR3, BOARD_CAP, i, j, pattern, board]
 RESERVED, MARKERS         , vars...                 , BOARD_START

;; START OF BOARD: 8

                    ;; Set the size of the board
00000100 00011110   PUSH_STACK 30
00000011 00000100   STORE_MEMORY 4

                    ;; Set the second-to-last board element to 1
00000100 00000001   PUSH_STACK 1
00000010 00000100   LOAD_MEMORY 4
00000100 00000110   PUSH_STACK 6        ;; BOARD_CAP - 2 + 8 (BOARD_START)
10000001            BINARY_ADD
10010000            FORWARD_ARGS
00000011            STORE_MEMORY

                    ;; FOR1
00001110 00000001   MAKE_MARKER 1
                    ;;; Check if `i < BOARD_CAP - 2`
00000010 00000101   LOAD_MEMORY 5
00000010 00000100   LOAD_MEMORY 4
00000100 00000010   PUSH_STACK 2
10000010            BINARY_SUBTRACT
11100010            LESS_THAN
10100000 01001001   IF_RUN_NEXT 73
                    |   ;; FOR2
00000100 00000000   |   PUSH_STACK 0
00000011 00000110   |   STORE_MEMORY
00001110 00000010   |   MAKE_MARKER 2
                    |   ;;; Check if `j < BOARD_CAP`
00000010 00000110   |   LOAD_MEMORY 6
00000010 00000100   |   LOAD_MEMORY 4
11100010            |   LESS_THAN
10100000 00010001   |   IF_RUN_NEXT 17
                    |   |   ;;; putc(" *"[board[j]])
00000010 00000110   |   |   LOAD_MEMORY 6
00000100 00001000   |   |   PUSH_STACK 8
10000001            |   |   BINARY_ADD
10010000            |   |   FORWARD_ARGS
00000010            |   |   LOAD_MEMORY
                    |   |
00000100 00000000   |   |   PUSH_STACK 0
11100001            |   |   EQUALS_TO
                    |   |
10100000 00000010   |   |   IF_RUN_NEXT 2
00000100 00100000   |   |   |   PUSH_STACK 32
10100001 00000001   |   |   |   SKIP_NEXT 1
00000100 00101010   |   |   PUSH_STACK 42
00001010 00000000   |   |   WRITE_TO 0
                    |   |
                    |   |   ;; Increment j by 1
00000010 00000110   |   |   LOAD_MEMORY 6
00000100 00000001   |   |   PUSH_STACK 1
10000001            |   |   BINARY_ADD
00000011 00000110   |   |   STORE_MEMORY 6
                    |   |   
00001111 00000010   |   |   GOTO_MARKER 2
                    |   |
                    |   ;;; newline
00000100 00001010   |   PUSH_STACK 10
00001010 00000000   |   WRITE_TO 0
                    |   |
                    |   ;;; set pattern
00000010 00001000   |   LOAD_MEMORY 8
00000100 00000001   |   PUSH_STACK 1
11001000            |   BINARY_LEFT_SHIFT
00000010 00001001   |   LOAD_MEMORY 9
11000010            |   BINARY_OR
00000011 00000111   |   STORE_MEMORY 7
                    |   |
                    |   ;;; FOR3
00000100 00000001   |   PUSH_STACK 1
00000011 00000110   |   STORE_MEMORY 6
00001110 00000011   |   MAKE_MARKER 3
                    |   ;;; Check if `j < BOARD_CAP - 1`
00000010 00000110   |   LOAD_MEMORY 6
00000010 00000100   |   LOAD_MEMORY 4
00000100 00000001   |   PUSH_STACK 1
10000010            |   BINARY_SUBTRACT
11100010            |   LESS_THAN
10100000 00011011   |   IF_RUN_NEXT 27
00000010 00000111   |   |   LOAD_MEMORY 7
00000100 00000001   |   |   PUSH_STACK 1
11001000            |   |   BINARY_LEFT_SHIFT
00000100 00000111   |   |   PUSH_STACK 7
11000001            |   |   BINARY_AND
00000010 00000110   |   |   LOAD_MEMORY 6   board[j+1]
00000100 00001001   |   |   PUSH_STACK 9   (1 + 8 BOARD_START)
10000001            |   |   BINARY_ADD
10010000            |   |   FORWARD_ARGS
00000010            |   |   LOAD_MEMORY
11000010            |   |   BINARY_OR
00000011 00000111   |   |   STORE_MEMORY 7
                    |   |
00000100 01101110   |   |   PUSH_STACK 110
00000010 00000111   |   |   LOAD_MEMORY 7
11001001            |   |   BINARY_RIGHT_SHIFT
00000100 00000001   |   |   PUSH_STACK 1
11000001            |   |   BINARY_AND
00000010 00000110   |   |   LOAD_MEMORY 6
00000100 00001000   |   |   PUSH_STACK 8
10000001            |   |   BINARY_ADD
10010000            |   |   FORWARD_ARGS
00000011            |   |   STORE_MEMORY
                    |   |
                    |   |   ;; Increment j by 1
00000010 00000110   |   |   LOAD_MEMORY 6
00000100 00000001   |   |   PUSH_STACK 1
10000001            |   |   BINARY_ADD
00000011 00000110   |   |   STORE_MEMORY 6
                    |   |
00001111 00000011   |   |   GOTO_MARKER 3
                    |   |
                    |   ;; Increment i by 1
00000010 00000101   |   LOAD_MEMORY 5
00000100 00000001   |   PUSH_STACK 1
10000001            |   BINARY_ADD
00000011 00000101   |   STORE_MEMORY 5
                    
00001111 00000001   |   GOTO_MARKER 1